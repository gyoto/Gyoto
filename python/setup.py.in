#!/usr/bin/env python

# setup.py.in.distutils
#
# Copyright 2012, 2013 Brandon Invergo <brandon@invergo.net>
# Copyright 2014 Thibaut Paumard
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.

HOME_LORENE="@HOME_LORENE@"

from setuptools import setup, Extension
import platform
import re

import numpy
try:
    numpy_include = numpy.get_include()
except AttributeError:
    numpy_include = numpy.get_numpy_include()


if platform.system() == 'Linux':
    doc_dir = '@prefix@/share/doc/@PACKAGE_TARNAME@'
else:
    try:
        from win32com.shell import shellcon, shell
        homedir = shell.SHGetFolderPath(0, shellcon.CSIDL_APPDATA, 0, 0)
        appdir = '@PACKAGE_TARNAME@'
        doc_dir = os.path.join(homedir, appdir)
    except:
        pass

gyoto_lib_dirs=['@abs_srcdir@/../lib/.libs']
gyoto_libs=['gyoto@FEATURES@']
gyoto_ldflags=[]
for libspec in ('@CFITSIO_LIBS@', '@XERCES_LIBS@', '@UDUNITS_LIBS@'):
    libspec=re.split('[ \t]', libspec)
    for comp in libspec:
        if re.match('-L', comp):
            gyoto_lib_dirs.append(re.sub('^-L', '', comp))
        elif re.match('-l', comp):
            gyoto_libs.append(re.sub('^-l', '', comp))
        elif comp != '':
            gyoto_ldflags.append(comp)

gyoto_inc_dirs=[numpy_include, 'include', '@abs_srcdir@', '@abs_srcdir@/include', '@abs_srcdir@/../include']
gyoto_cflags=[]
for flags in ('@CXXFLAGS@', '@CFITSIO_CFLAGS@', '@XERCES_CFLAGS@', '@UDUNITS_CFLAGS@', '@EIGEN_CFLAGS@', '@BOOST_CPPFLAGS@'):
    flags=re.split('[ \t]', flags)
    for comp in flags:
        if re.match('-I', comp):
            gyoto_inc_dirs.append(re.sub('^-I', '', comp))
        elif comp != '':
            gyoto_cflags.append(comp)

gyoto_module = Extension('gyoto/_core',
                         sources=['src/core_wrap.cxx'],
                         include_dirs=gyoto_inc_dirs,
                         library_dirs=gyoto_lib_dirs,
                         libraries=gyoto_libs,
                         extra_compile_args=gyoto_cflags,
                         extra_link_args=gyoto_ldflags
                         )

gyoto_std_module = Extension('gyoto/_std',
                         sources=['src/std_wrap.cxx'],
                         include_dirs=gyoto_inc_dirs,
                         library_dirs=gyoto_lib_dirs,
                         libraries=gyoto_libs,
                         extra_compile_args=gyoto_cflags,
                         extra_link_args=gyoto_ldflags
                         )

gyoto_lorene_module = Extension('gyoto/_lorene',
                         sources=['src/lorene_wrap.cxx'],
                         include_dirs=gyoto_inc_dirs,
                         library_dirs=gyoto_lib_dirs,
                         libraries=gyoto_libs,
                         extra_compile_args=gyoto_cflags,
                         extra_link_args=gyoto_ldflags
                         )

pymodules = ["gyoto.__init__", "gyoto.core", "gyoto.std",
             "gyoto._namespaces", "gyoto.astrobj", "gyoto.metric",
             "gyoto.spectrum", "gyoto.spectrometer", "gyoto.animate", "gyoto.util"]
extmodules= [gyoto_module, gyoto_std_module]

if HOME_LORENE != "":
    pymodules.append("gyoto.lorene")
    extmodules.append(gyoto_lorene_module)

setup(py_modules=pymodules,
      ext_modules=extmodules
     )
